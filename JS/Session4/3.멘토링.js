// 멘토링
// 현수네 반 선생님은 반 학생들의 수학점수를 향상시키기 위해 멘토링 시스템을 만들려고 합니다.
// 멘토링은 멘토(도와주는 학생)와 멘티(도움을 받는 학생)가 한 짝이 되어 멘토가 멘티의
// 수학 공부를 도와주는 것입니다.
// 선생님은 M번의 수학 테스트 등수를 가지고 멘토와 멘티를 정합니다.
// 만약 A학생이 멘토이고, B학생이 멘티가 되는 짝이 되었다면, A학생은 M번의 수학 테스트에서
// 모두 B학생보다 등수가 앞서야 합니 .
// M번의 수학성적이 주어지면 멘토와 멘티가 되는 짝을 만들 수 있는 경우가 총 몇 가지인지
// 출력하는 프로그램을 작성하세요.
//  ▣입력설명
// 첫 번째 줄에 반 학생 수 N(1<=N<=20)과 M(1<=M<=10)이 주어진다.
// 두 번째 줄부터 M개의 줄에 걸쳐 수학 테스트 결과가 학생 번호로 주어진다. 학생 번호가 제일
// 앞에서 부터 1등, 2등, ...N등순으로 표현된다.
// 만약 한 줄에 N=4이고, 테스트 결과가 3142로 입력되었다면 3번학생이 1등, 1번학생이
// 2등, 4번 학생이 3등, 2번 학생이 4등을 의미합니다.
//  ▣출력설명
// 첫번째 줄에 짝을 만들 수 있는총경우를출력합니다.
//  ▣입력예제1
//  43
//  3412
//  4321
//  3142
//  ▣출력예제1
//  3
// (3, 1), (3, 2), (4, 2)와 같이 3가지 경우의 멘토 멘티 짝을 만들 수 있다.

function solution(arr) {
  let answer = 0;
  let n = arr[0].length;
  let m = arr.length;

  for (let i = 1; i <= n; i++) {
    for (let j = 1; j <= n; j++) {
      let cnt = 0;
      for (let x = 0; x < m; x++) {
        let pi = (pj = 0);
        for (let y = 0; y < n; y++) {
          arr[x][y] === i && (pi = y);
          arr[x][y] === j && (pj = y);
        }
        if (pi < pj) cnt++;
      }
      cnt === m && answer++;
    }
  }

  return answer;
}

let arr = [
  [3, 4, 1, 2],
  [4, 3, 2, 1],
  [3, 1, 4, 2],
];
console.log(solution(arr));
